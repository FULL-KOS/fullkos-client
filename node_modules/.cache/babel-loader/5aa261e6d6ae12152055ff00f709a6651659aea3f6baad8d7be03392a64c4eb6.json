{"ast":null,"code":"var _jsxFileName = \"E:\\\\koscom\\\\fullkos-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\n//리액트 라우터 사용을 위한 세팅\nimport React, { useState } from 'react';\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport AuthButton from './mainPage/AuthButton';\nimport LoginButton from './mainPage/LoginButton';\nimport Input from './mainPage/Input';\nimport Index from './mainPage/Index';\nimport UserReport from './userReportPage/UserReport';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [idValue, setId] = useState('');\n  const [pwValue, setPw] = useState('');\n  const navigate = useNavigate();\n  const saveUserId = event => {\n    setId(event.target.value);\n  };\n  const saveUserPw = event => {\n    setPw(event.target.value);\n  };\n  function Auth() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AuthButton, {\n        name: \"\\uB85C\\uADF8\\uC778\",\n        path: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthButton, {\n        name: \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n        path: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n  const LoginProcess = () => {\n    // Mockdata는 POST 방식 불가\n    fetch('/mockData/Joohee/loginData.json', {\n      method: 'GET'\n      // headers: {\n      //   Accept: \"application / json\",\n      //   'Content-Type': 'application/json;charset=utf-8',\n      // },\n      // body: JSON.stringify({\n      //   id: idValue,\n      //   password: pwValue,\n      // })\n    }).then(response => response.json()).then(data => {\n      if (data.message === \"LOGIN SUCCESS\") {\n        alert('로그인 되었습니다.');\n        // localStorage.setItem('token', data.message);\n        navigate(\"/userReport\");\n      } else {\n        alert('가입되지 않은 정보입니다.');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Index, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 40\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 49\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Index, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\uC544\\uC774\\uB514\", /*#__PURE__*/_jsxDEV(Input, {\n              name: \"text\",\n              value: idValue,\n              onChange: saveUserId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 43\n            }, this), \"\\uBE44\\uBC00\\uBC88\\uD638\", /*#__PURE__*/_jsxDEV(Input, {\n              name: \"password\",\n              value: pwValue,\n              onChange: saveUserPw\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n              name: \"\\uB85C\\uADF8\\uC778\",\n              onClick: LoginProcess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/userReport\",\n        element: /*#__PURE__*/_jsxDEV(UserReport, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SWqcytVXr14L9uip+bSGMmcL828=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","BrowserRouter","Routes","Route","Link","useNavigate","AuthButton","LoginButton","Input","Index","UserReport","jsxDEV","_jsxDEV","App","_s","idValue","setId","pwValue","setPw","navigate","saveUserId","event","target","value","saveUserPw","Auth","children","name","path","fileName","_jsxFileName","lineNumber","columnNumber","LoginProcess","fetch","method","then","response","json","data","message","alert","element","onChange","onClick","_c","$RefreshReg$"],"sources":["E:/koscom/fullkos-client/src/App.js"],"sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\n//리액트 라우터 사용을 위한 세팅\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AuthButton from './mainPage/AuthButton';\r\nimport LoginButton from './mainPage/LoginButton';\r\nimport Input from './mainPage/Input';\r\nimport Index from './mainPage/Index';\r\nimport UserReport from './userReportPage/UserReport';\r\n\r\nfunction App() {\r\n  const [idValue, setId] = useState('');\r\n  const [pwValue, setPw] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const saveUserId = event => {\r\n    setId(event.target.value);\r\n  };\r\n\r\n  const saveUserPw = event => {\r\n    setPw(event.target.value);\r\n  };\r\n\r\n  function Auth() {\r\n    return (\r\n\r\n      <div>\r\n        <AuthButton name=\"로그인\" path=\"/login\"/>\r\n        <AuthButton name=\"회원가입\" path=\"/\"/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const LoginProcess = () => {\r\n    // Mockdata는 POST 방식 불가\r\n    fetch('/mockData/Joohee/loginData.json', {\r\n      method: 'GET',\r\n      // headers: {\r\n      //   Accept: \"application / json\",\r\n      //   'Content-Type': 'application/json;charset=utf-8',\r\n      // },\r\n      // body: JSON.stringify({\r\n      //   id: idValue,\r\n      //   password: pwValue,\r\n      // })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if (data.message === \"LOGIN SUCCESS\") {\r\n        alert('로그인 되었습니다.');\r\n        // localStorage.setItem('token', data.message);\r\n        navigate(\"/userReport\");\r\n      } else {\r\n        alert('가입되지 않은 정보입니다.');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        <Route path=\"/\" element={<div> <Index/> <Auth/> </div>}/>\r\n        <Route path=\"/login\" element={<div>\r\n                                        <Index/>\r\n                                        {/* 이렇게 안하면 포커스가 한글자 적을 때마다 풀림 */}\r\n                                        <div>\r\n                                          아이디 \r\n                                          <Input name=\"text\" value={idValue} onChange={saveUserId}/>\r\n                                          비밀번호 \r\n                                          <Input name=\"password\" value={pwValue} onChange={saveUserPw}/>\r\n                                          <LoginButton name=\"로그인\" onClick={LoginProcess}/>\r\n                                        </div>\r\n                                      </div>\r\n                                    }/>\r\n        <Route path='/userReport' element={<UserReport/>}/>\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}